* Logging for crash recovery?
* Tests:
    - client offers file, then we remove file
    - malicious client offers bad file
    - client LocalFileListener:
        * check actually informed when things happen
* From torrent_utils.go:
    - Currently just hashing the whole file. Should we hash each chunk instead? i think we need to in the end...because this enables clients to start seeding chunks before they have the whole file
    - store whole torrent on tracker upon creation. what's this good for? it addresses the following situation:
        * alice creates a torrent for game_of_thrones.mp4, and registers it
        * eve creates a copy of this torrent with different per-chunk hashes that match the chunks in virus.exe, and offers virus.exe along with this new torrent
        * bob gets some of his chunks from eve, and only realizes that they're corrupted when he gets the whole file and notices that it doesn't match the whole file hash
        * Solution! Let clients chech when they get a torrent that it actually is a torrent that was created on the tracker.
    - CreateEntry now offers a whole (unconfirmed, unregistered) torrent to try and get it approved by the tracker. if the tracker approves, it creates an entry, and New() can return the Torrent
    - note that, if we have a torrent for a chunkID that another client is requesting, we know *exactly* which torrent that client used to request the chunk...because ChunkIDs contain torrent IDs, and torrentIDs are uniquely tied to torrents
    - change size in torrent to an int64?
    - TODO: only being able to create a torrent with a given ID once is fairly fragile...if we somehow forget that we created the torrent, our guarantees break... and what if we do create on the tracker, but the client doesn't find out...would it be blocked from ever creating a torrent with the name it wants to?
